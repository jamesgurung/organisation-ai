@page
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject IWebHostEnvironment Environment
@{
  var spendTask = TableService.GetSpendAsync(User.Identity.Name);
  var historyTask = TableService.GetConversationsAsync(User.Identity.Name, true);
  var reviewGroups = UserGroup.GroupNamesByReviewerEmail[User.Identity.Name].ToList();
  var reviewTask = reviewGroups.Count > 0 ? TableService.GetReviewEntitiesAsync(reviewGroups) : Task.FromResult<List<ReviewEntity>>(null);
  await Task.WhenAll(spendTask, historyTask, reviewTask);
  var spend = await spendTask;
  var history = await historyTask;
  var reviewItems = await reviewTask;
  var userGroup = UserGroup.ConfigByGroupName[UserGroup.GroupNameByUserEmail[User.Identity.Name]];
  var limitReached = spend >= userGroup.UserMaxWeeklySpend;
}
<div id="app-container">
  <div id="sidebar">
    <div id="sidebar-header">
      <a id="logout-btn" class="icon-button" href="/auth/logout">
        <span class="material-symbols-rounded">logout</span>
      </a>
      @if (reviewGroups.Count > 0)
      {
      <a id="usage-btn" class="icon-button" href="/usage">
        <span class="material-symbols-rounded">bar_chart</span>
      </a>
      }
      <button id="new-chat-btn">
        <span class="material-symbols-rounded">add</span>
        New Chat
      </button>
    </div>
    <div id="sidebar-tabs">
      <button class="tab active" id="presets-tab">Tools</button>
      <button class="tab" id="history-tab">History</button>
      <button class="tab" id="review-tab" style="display: none">Review <span id="review-badge"></span></button>
    </div>
    <div id="presets-list" class="chat-list">
    </div>
    <div id="chat-history" class="chat-list" style="display: none">
    </div>
    <div id="review-list" class="chat-list" style="display: none">
    </div>
  </div>

  <div class="main-content">
    <div id="settings-display">
      <div id="settings-row">
        <div class="setting-item" title="AI language model">
          <span class="material-symbols-rounded">network_intelligence</span>
          <span class="setting-value" id="model-display"></span>
        </div>
        <div id="setting-item-temperature" class="setting-item" title="Temperature (lower is more accurate, higher is more creative)">
          <span class="material-symbols-rounded">thermostat</span>
          <span class="setting-value" id="temp-display"></span>
        </div>
        <div id="setting-item-reasoning" class="setting-item" title="Reasoning effort">
          <span class="material-symbols-rounded">emoji_objects</span>
          <span class="setting-value" id="reasoning-display"></span>
        </div>
        <div id="setting-item-web-search" class="setting-item" title="Web search is enabled">
          <span class="material-symbols-rounded">language</span>
        </div>
        <div id="setting-item-file-search" class="setting-item" title="This assistant has access to a document store">
          <span class="material-symbols-rounded">database_search</span>
        </div>
        <div class="setting-item">
          <span class="material-symbols-rounded info-icon" id="system-prompt-icon" title="Click to view the model instructions">info</span>
          <div id="system-prompt-popup">
            <button id="system-prompt-close-btn" class="close-btn" aria-label="Close"></button>
            <h2>Instructions given to the model:</h2>
            <div></div>
          </div>
        </div>
      </div>
    </div>

    <div id="user" style="display: none"></div>

    <div id="welcome-message">
      <img src="/img/logo.png" class="logo" />
      <h1 class="brand">@Organisation.Instance.Name <span>AI</span></h1>
      <div id="intro-text"></div>
    </div>

    <div id="chat-container">
      <div id="chat-content-container"></div>
    </div>

    <div id="long-chat-warning" style="display: none">
      <span class="large-screen">Feel free to keep chatting! For new questions, starting a fresh chat can give better results.</span>
      <span class="small-screen">New question? Try a fresh chat.</span>
    </div>

    <div id="input-container">
      <form id="chat-form">
        <div id="file-upload">
          <label for="file-input" id="file-label">
            <span class="material-symbols-rounded">attach_file</span>
          </label>
          <input type="file" id="file-input" accept=".jpeg,.jpg,.png,.gif,.webp,.pdf" multiple>
          <div id="file-preview"></div>
        </div>
        <textarea id="user-input" rows="1"></textarea>
        <button type="submit" id="send-btn">
          <span class="material-symbols-rounded">send</span>
        </button>
      </form>
      <div id="voice-area" style="display: none">
        <button id="speak">Start</button>
        <button id="restart-speak" style="display: none">New Conversation</button>
      </div>
    </div>
  </div>
</div>

<button id="mobile-sidebar-toggle"><span class="material-symbols-rounded">menu</span></button>

@section Scripts {
  <script src="/lib/marked/lib/marked.umd.min.js"></script>
  <script src="/lib/signalr/dist/browser/signalr.min.js"></script>
  <script>
    const antiforgeryToken = '@(Antiforgery.GetAndStoreTokens(HttpContext).RequestToken)';
    const presets = @Html.Raw(userGroup.PresetJson);
    const history = @Html.Raw(JsonSerializer.Serialize(history));
    const introText = @Html.Raw(JsonSerializer.Serialize(userGroup.IntroMessage));
    const showPresetDetails = @userGroup.ShowPresetDetails.ToString().ToLowerInvariant();
    const allowUploads = @userGroup.AllowUploads.ToString().ToLowerInvariant();
    const reviewItems = @Html.Raw(JsonSerializer.Serialize(reviewItems));
    const stopCommands = @Html.Raw(JsonSerializer.Serialize(userGroup.StopCommands));
    let spendLimitReached = @limitReached.ToString().ToLowerInvariant();
  </script>

  @if (Environment.IsDevelopment()) {
  <script src="/js/main.js"></script>
  <script src="/js/presets.js"></script>
  <script src="/js/history.js"></script>
  <script src="/js/chat.js"></script>
  <script src="/js/streaming.js"></script>
  <script src="/js/speech.js"></script>
  } else {
  <script src="/js/site.js"></script>
  }
}